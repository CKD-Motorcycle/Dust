package $packagename

import (
  "time"
  "github.com/blanu/Dust/go/DustModel/dist"
  "github.com/blanu/Dust/go/DustModel/huffman"
)

type $name struct {
  $duration.decl
  $packet_count.decl
  $packet_sleep.decl
  $packet_length.decl
  $random_bytes.decl
  $encode.decl
  $decode.decl
}

func New() $name {
  $weights
  $huffman
  return $name{
    $duration.data
    $packet_count.data
    $packet_sleep.data
    $packet_length.data
    $random_bytes.data
    $encode.data
    $decode.data}
}

func (self $name) wholeStreamDurationMillis() uint16 {
  $duration.body
}

func (self $name) WholeStreamDuration() time.Duration {
  return time.Duration(self.wholeStreamDurationMillis()) * time.Millisecond
}

func (self $name) PacketCount(milliseconds uint16) uint16 {
  $packet_count.body
}

func (self $name) MaxPacketLength() uint16 {
  return 65535
}

func (self $name) NextPacketLength() uint16 {
  $packet_length.body
}

func (self $name) nextPacketSleep() uint16 {
  $packet_sleep.body
}

func (self $name) NextPacketSleep() time.Duration {
  return time.Duration(self.nextPacketSleep()) * time.Millisecond
}

func (self $name) EncodeBytes(bytes []byte) []byte {
  $encode.body
}

func (self $name) DecodeBytes(bytes []byte) []byte {
  $decode.body
}
